{"version":3,"file":"index.m.js","sources":["../src/agent/my-plugin.ts"],"sourcesContent":["import { IAgentPlugin } from 'daf-core'\nimport { IMyAgentPlugin, IMyAgentPluginFooArgs, IContext } from '../types/IMyAgentPlugin'\n\nconst schema = { \n  components: { \n    schemas: {\n      IMyAgentPluginFooArgs: {\n        type: \"object\",\n        properties: {\n          did: {\n            type: \"string\",\n            description: \"Decentralized identifier\"\n          },\n          bar: {\n            type: \"string\",\n            description: \"bar\"\n          },\n        }\n      }\n    }, \n    methods: {\n      myPluginFoo: {\n        description: \"Does foo\",\n        arguments: {\n          \"$ref\": \"#/components/schemas/IMyAgentPluginFooArgs\"\n        },\n        returnType: {\n          type: \"string\"\n        }\n      }\n    } \n  }\n}\n\nexport class MyAgentPlugin implements IAgentPlugin {\n  \n  readonly schema = schema\n  \n  readonly methods: IMyAgentPlugin = {\n    myPluginFoo: this.myPluginFoo.bind(this)\n  }\n\n  private async myPluginFoo(args: IMyAgentPluginFooArgs, context: IContext): Promise<string> {\n    const didDoc = await context.agent.resolveDid({ didUrl: args.did })\n    console.log(didDoc)\n    return args.bar\n  }\n}"],"names":["schema","components","schemas","IMyAgentPluginFooArgs","type","properties","did","description","bar","methods","myPluginFoo","arguments","$ref","returnType","MyAgentPlugin","this","bind","args","context","agent","resolveDid","didUrl","didDoc","console","log"],"mappings":"AAGA,IAAMA,EAAS,CACbC,WAAY,CACVC,QAAS,CACPC,sBAAuB,CACrBC,KAAM,SACNC,WAAY,CACVC,IAAK,CACHF,KAAM,SACNG,YAAa,4BAEfC,IAAK,CACHJ,KAAM,SACNG,YAAa,UAKrBE,QAAS,CACPC,YAAa,CACXH,YAAa,WACbI,UAAW,CACTC,KAAQ,8CAEVC,WAAY,CACVT,KAAM,cAOHU,aAAb,aAEWC,YAASf,EAETe,aAA0B,CACjCL,YAAaK,KAAKL,YAAYM,KAAKD,0BAGvBL,qBAAYO,EAA6BC,8BAChCA,EAAQC,MAAMC,WAAW,CAAEC,OAAQJ,EAAKX,qBAAvDgB,GAEN,OADAC,QAAQC,IAAIF,GACLL,EAAKT,MAXhB"}